{"ast":null,"code":"async function fetchCrimeData(postcode) {\n  //   const apiKey = \"YOUR_API_KEY\";\n  const apiUrl = `https://data.police.uk/api/crimes-street/all-crime?poly=${postcode}&date=2022-09`;\n  try {\n    const response = await fetch(apiUrl, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n        // Authorization: `Bearer ${apiKey}`,\n      }\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Network response was not ok\");\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching data: \", error);\n    return null;\n  }\n}\nexport default fetchCrimeData;","map":{"version":3,"names":["fetchCrimeData","postcode","apiUrl","response","fetch","headers","ok","Error","data","json","error","console"],"sources":["/Users/olumok01/Documents/my_github/crime-watch-app/client/src/api/api.js"],"sourcesContent":["async function fetchCrimeData(postcode) {\n  //   const apiKey = \"YOUR_API_KEY\";\n  const apiUrl = `https://data.police.uk/api/crimes-street/all-crime?poly=${postcode}&date=2022-09`;\n\n  try {\n    const response = await fetch(apiUrl, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // Authorization: `Bearer ${apiKey}`,\n      },\n    });\n    if (!response.ok) {\n      throw new Error(\"Network response was not ok\");\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching data: \", error);\n    return null;\n  }\n}\n\nexport default fetchCrimeData;\n"],"mappings":"AAAA,eAAeA,cAAcA,CAACC,QAAQ,EAAE;EACtC;EACA,MAAMC,MAAM,GAAI,2DAA0DD,QAAS,eAAc;EAEjG,IAAI;IACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,MAAM,EAAE;MACnCG,OAAO,EAAE;QACP,cAAc,EAAE;QAChB;MACF;IACF,CAAC,CAAC;;IACF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,OAAO,IAAI;EACb;AACF;AAEA,eAAeV,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}